pipeline {
    agent any

    environment {
        AWS_DEFAULT_REGION = "${env.AWS_REGION}"

        eksClusterName = "${env.CLUSTER_NAME}"
        registry = "${env.BE_REGISTRY}"
        registryCredential = "${env.AWS_CREDENTIAL_ID}"

        app_name = "backend"
        version = string(name: 'version', defaultValue: 'latest', description: 'Application Version')
    }

    stages {
        stage('Build') {
            steps {
                echo "Building ${app_name} image: ${registry}:${app_name}:${version}"
            }
        }

        stage('Deploy') {
            steps {
                withCredentials([[
                    $class: 'AmazonWebServicesCredentialsBinding',
                    credentialsId: 'user-aws',
                    accessKeyVariable: 'AWS_ACCESS_KEY_ID',
                    secretKeyVariable: 'AWS_SECRET_ACCESS_KEY'
                ]]) {
                    sh '''
                        export name="${app_name}";
                        export version="${version}";
                        export registry="${registry}";
                        envsubst < /var/lib/jenkins/workspace/backend-cd-pipeline/continous-delivery/backend.yaml > /var/lib/jenkins/workspace/backend-cd-pipeline/continous-delivery/backend-processed.yaml
                        cd /var/lib/jenkins/workspace/backend-cd-pipeline/continous-delivery && pwd
                        aws eks --region "${AWS_DEFAULT_REGION}" update-kubeconfig --name "${eksClusterName}"
                        kubectl apply -f mongodb.yaml
                        kubectl apply -f backend-processed.yaml
                    '''
                }
            }
        }
    }

    post {
        success {
            echo "Deployment successful"
        }
        failure {
            echo "Deployment failed"
        }
    }
}
